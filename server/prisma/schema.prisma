generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:password@localhost"
}

model Vendor {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  logoUrl    String
  VendorTeam VendorTeam[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model VendorTeam {
  id              Int                @id @default(autoincrement())
  vendor          Vendor             @relation(fields: [vendorId], references: [id])
  vendorId        Int
  accountExecutes AccountExecutive[]
  createdAt       DateTime           @default(now())
  updatedAt       DateTime           @updatedAt
}

model User {
  id               Int               @id @default(autoincrement())
  firstName        String
  lastName         String
  email            String
  photoUrl         String
  AccountExecutive AccountExecutive?
  Documents        Documents[]
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
}

model AccountExecutive {
  id           Int        @id @default(autoincrement())
  vendorTeam   VendorTeam @relation(fields: [vendorTeamId], references: [id])
  vendorTeamId Int
  user         User       @relation(fields: [userId], references: [id])
  userId       Int        @unique
  portals      Portal[]
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

model Portal {
  id                  Int              @id @default(autoincrement())
  accountExecutive    AccountExecutive @relation(fields: [accountExecutiveId], references: [id])
  accountExecutiveId  Int
  customerName        String
  customerLogoUrl     String
  roadmapStages       RoadmapStage[]
  nextStepsTasks      NextStepsTask[]
  currentRoadmapStage Int
  Documents           Documents[]
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
}

model RoadmapStage {
  id          Int                @id @default(autoincrement())
  portal      Portal             @relation(fields: [portalId], references: [id])
  portalId    Int
  heading     String
  date        DateTime?
  tasks       RoadmapStageTask[]
  ctaLinkText String?
  ctaLink     String?
  createdAt   DateTime           @default(now())
  updatedAt   DateTime           @updatedAt
}

model RoadmapStageTask {
  id             Int          @id @default(autoincrement())
  roadmapStage   RoadmapStage @relation(fields: [roadmapStageId], references: [id])
  roadmapStageId Int
  task           String
  createdAt      DateTime     @default(now())
  updatedAt      DateTime     @updatedAt
}

enum CustomerOrVendor {
  VENDOR
  CUSTOMER
}

//TODO: add creator
model NextStepsTask {
  id               Int              @id @default(autoincrement())
  portalId         Int
  portal           Portal           @relation(fields: [portalId], references: [id])
  description      String
  isCompleted      Boolean
  customerOrVendor CustomerOrVendor
  createdAt        DateTime         @default(now())
  updatedAt        DateTime         @updatedAt
}

model Documents {
  id        Int      @id @default(autoincrement())
  portalId  Int
  portal    Portal   @relation(fields: [portalId], references: [id])
  title     String
  url       String
  uploader  User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    Int
}
